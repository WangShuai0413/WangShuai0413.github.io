[{"title":"Python爬虫实例--爬取百度贴吧小说","date":"2017-08-01T02:33:15.836Z","path":"2017/08/01/python/","text":"写在前面 本篇文章是我在简书上写的第一篇技术文章，作为一个理科生，能把仅剩的一点文笔拿出来献丑已是不易，希望大家能在指教我的同时给予我一点点鼓励，谢谢。 ##一.介绍 小说吧：顾名思义，是一个小说爱好者的一个聚集地。当然这不是重点，重点是，我们要做的事情便是将小说吧中以帖子连载形式的小说用爬虫给拿下来保存到本地 这个项目是我曾初学python之时做的一个练习项目，现在再重新拿出来作为一篇开篇简作献给大家。阅读本文不需要有很高的python技术或者爬虫知识，只要略微有些python基础就可以，在一些地方，我会尽量给大家详细备注。 ##二.环境： Python版本：Python2.7 IDE：Pycharm2017 第三方库：urllib2 模块：urllib2是python的一个获取url（Uniform ResourceLocators，统一资源定址器）的模块。re模块：Python 的 re模块（Regular Expression 正则表达式）提供各种正则表达式的匹配操作 注：以上两个第三方库在Python2.7中自带，因此不用再安装。本案例在使用第三方库函数时会详细介绍用法与功能。 ##三.案例 ###1.导入模块首先创建一个python文件，我这里为main.py（文件名随意取，本案例只使用一个py文件）。本案例中我们使用两个模块urllib2和re，因此首先导入模块. 12# -*- coding:utf-8 -*-import urllib2 , re 当然，python2版本需要在开头声明编码格式。除了上述代码的写法以外，也可以这样声明 1# coding = utf-8 ###2.理解思路我个人在做项目前习惯先分析项目，将步骤一步一步的写出来，然后去慢慢实现。 找到目标网页，获取源码 匹配标题，获取标题内容 匹配正文，获取正文内容 去除或者替换杂项 OK，这里思路就是这样的一个四部曲。现在来看一下代码框架。 123456789101112131415161718192021222324# -*- coding:utf-8 -*-import urllib2 , re#这是本案例的类class Novel: baseUrl = '' #这里是你要爬取的小说的链接 #这个方法用来获取网页源码 def getPage(self): pass #这个方法用来获取小说标题并保存 def getTitle(self): pass #这个方法用来获取小说文本并保存 def getText(self): pass#这是一个测试模块，执行本文件时的入口if __name__ == '__main__': n = Novel() #实例化一个类 #print n.getPage() #获取网页源码 n.getTitle()#获取小说题目 n.getText() #获取小说内容 现在开始一步步实现功能： 1.找到目标网页，获取网页源码 我在小说吧精品贴里面随便翻了一个帖子，就以这个帖子为案例。【原创】《贫僧为什么不可以谈恋爱》（古言，长篇）现在我们需要爬取这个帖子中小说内容，我们需要直接将它的链接地址给baseUrl吗？当然不是爬取一个帖子上的小说，实际上是去爬取该小说作者的所发表的内容，所以我们还需要进行一步操作，只看楼主 我们所需要的链接地址，就是当前这个了 https://tieba.baidu.com/p/4973334088?see_lz=1注意一定是要只看楼主后的链接，比之前的会多出个?see_lz=1 现在就将你得到的链接地址赋值给baseUrl 1baseUrl = 'https://tieba.baidu.com/p/4973334088?see_lz=1' 接下来我们来获取这个网页的源码，也就是实现getPage函数： 1234def getPage(self): request = urllib2.Request(self.baseUrl) response = urllib2.urlopen(request).read() return response 本函数现实通过以基本链接baseUrl为参数实现了一个Request请求类的对象request。接着通过urlopen去执行request请求对象打开目标网页。接着通过调用read`函数获取目标网页的源码，并作为函数返回值返回.返回的网页源码，可在测试代码块中通过调用输出本函数查看。例： 123if __name__ == '__main__': n = Novel() #实例化一个类 print n.getPage() #获取网页源码 2.匹配标题，获取标题内容 首先先亮出我的代码： 12345678910def getTitle(self): html = self.getPage() #调用获取源码 #r防止转义 reg = re.compile(r'&lt;h3 class=\"core_title_txt pull-left text-overflow \" title=\"(.*?)\" style=') items = re.findall(reg,html) for item in items: print item f = open('novel.txt','w') f.write('标题===&gt;&gt;&gt;'+item) f.close() 注意：代码错行要在行末加\\号例如： 12print 'hello \\ world' 首先我们在网页源码中寻找包含小说主题部分的源码，可以通过Ctrl+F搜索。查找到&lt;div&gt;^=……中间包含小说主题&lt;.div&gt;这么一长串的包含小说主题的代码。只要将主题部分全部置换为(.*?)号就可以了。 在正则表达式中的含义：.:匹配任意字符，除了换行符:匹配前面的子表达式零次或多次?:匹配前面的子表达式零次或一次():标记一个子表达式的开始和结束位置。子表达式可以获取供以后使用**（.&gt;）**:匹配所有满足条件的表达式并作为结果集返回 re.compile函数是将正则表达式的字符串形式编译为Pattern实例，然后使用Pattern实例处理文本并获得匹配结果，其中字符串前的r是为了防止转义。findall(正则表达式，文本) ——将满足的匹配结果以list列表返回用迭代拿到items中的主题名后在将之写入名为novel.txt的文件中 3.匹配正文，获取小说正文内容 匹配正文，与匹配标题相差无几，首先是寻找以楼主发表的第一层为例的代码&lt;div&gt;段,从中获取可以作为正则匹配的语句。并将正文部分改为(.*?)如下 class=&quot;d_post_content j_d_post_content &quot;&gt; (.*?)&lt;/div&gt;&lt;br&gt;实现函数如下： 12345678910#这个方法用来获取小说文本并保存def getText(self): html = self.getPage() reg = re.compile(r'class=\"d_post_content j_d_post_content \"&gt; (.*?)&lt;/div&gt;&lt;br&gt;',re.S)#匹配换行符 req = re.findall(reg,html) for i in req: print i f = open('novel.txt','a') #a 追加模式 f.write('\\n'+i) f.close() 如同匹配主题一样的步骤匹配正文，但是并没有结束，因为你会在你的结果中看到这样 对没错。杂乱无章的正文，中间还有HTML中的&lt;a&gt;,&lt;img&gt;,&lt;br&gt;等标签我们接着来处理 4.替换或者去出杂项 re模块中有sub函数 sub(被替换的内容,替换的内容,需要处理的文本) —- 返回处理后的文本 现在我们将杂项全部给替换成空字符吧&quot;&quot;吧当然&lt;br&gt;标签可以直接调用字符串中的replace函数替换成换行符\\n 修改后的函数模块如下： 12345678910111213141516def getText(self): html = self.getPage() reg = re.compile(r'class=\"d_post_content j_d_post_content \"&gt; (.*?)&lt;/div&gt;&lt;br&gt;',re.S)#匹配换行符 req = re.findall(reg,html) for i in req: removeA = re.compile('&lt;a.*?&gt;|&lt;/a&gt;') removeIMG = re.compile('&lt;img.*?&gt;') removeHTTP = re.compile('&lt;http.*?.html&gt;') i = re.sub(removeA,\"\",i) i = re.sub(removeIMG,\"\",i) i = re.sub(removeHTTP,\"\",i) i = i.replace('&lt;br&gt;','\\n') print i f = open('novel.txt','a') #a 追加模式 f.write('\\n'+i) f.close() 注意：记得在打开文件函数中，对文件的操作方式为a追加模式 案例结束：将完整代码贴给大家： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647# -*- coding: utf-8 -*-import urllib2 , re#这是本案例的类class Novel: baseUrl = 'https://tieba.baidu.com/p/4973334088?see_lz=1' #这里是你要爬取的小说的链接 #这个方法用来获取网页源码 def getPage(self): request = urllib2.Request(self.baseUrl) response = urllib2.urlopen(request).read() return response #这个方法用来获取小说标题并保存 def getTitle(self): html = self.getPage() #调用获取源码 #r防止转义 reg = re.compile(r'&lt;h3 class=\"core_title_txt pull-left text-overflow \" title=\"(.*?)\" style=') items = re.findall(reg,html) for item in items: print item f = open('novel.txt','w') f.write('标题===&gt;&gt;&gt;'+item) f.close() #这个方法用来获取小说文本并保存 def getText(self): html = self.getPage() reg = re.compile(r'class=\"d_post_content j_d_post_content \"&gt; (.*?)&lt;/div&gt;&lt;br&gt;',re.S)#匹配换行符 req = re.findall(reg,html) for i in req: removeA = re.compile('&lt;a.*?&gt;|&lt;/a&gt;') removeIMG = re.compile('&lt;img.*?&gt;') removeHTTP = re.compile('&lt;http.*?.html&gt;') i = re.sub(removeA,\"\",i) i = re.sub(removeIMG,\"\",i) i = re.sub(removeHTTP,\"\",i) i = i.replace('&lt;br&gt;','\\n') print i f = open('novel.txt','a') #a 追加模式 f.write('\\n'+i) f.close()#这是一个测试代码块，执行本文件时的入口if __name__ == '__main__': n = Novel() #实例化一个类 #print n.getPage() #获取网页源码 n.getTitle()#获取小说题目 n.getText() #获取小说内容 以后想要获取小说吧哪个小说，只要将baseUrl的地址修改一下就好咯。","tags":[]},{"title":"","date":"2017-08-01T02:28:53.693Z","path":"2017/08/01/Java笔记/","text":"title: Java开发环境的搭建 1. Java简介 Java是1995年由Sun公司推出的一门高级面向对象编程语言。 Sun公司于2009年被Oracle公司收购。 Java之父—— 詹姆斯·高斯林Java主要分为三个体系： JavaSE（Java Platform Standard Edition，java平台标准版） JavaEE (Java Platform,Enterprise Edition，java平台企业版) JavaME (Java Platform Micro Edition，java平台微型版) 2.Java开发环境配置什么是jdk，jre，jvm？它们别别有什么作用与联系呢？ jdk：java开发工具包是整个JAVA的核心。包括了Java运行环境（Java Runtime Envirnment），一堆Java工具（javac/java/jdb等）和Java基础的类库（即Java API 包括rt.jar） jre：java运行时环境。其中包含了Java virtual machine（JVM），runtime class libraries和Java application launcher，这些是运行Java程序的必要组件。 jvm：java虚拟机，它是整个java实现跨平台的最核心的部分，所有的java程序会首先被编译为.class的类文件，这种类文件可以在虚拟机上执行。 注意：java语言是跨平台的，jvm不是跨平台的。 工欲善其事必先利其器，接下来开始搭建java开发环境：首先我们需要下载java开发工具包jdk。下载地址下载步骤：下载后JDK的安装根据提示进行，还有安装JDK的时候也会安装JRE，一并安装就可以了。安装JDK，安装过程中可以自定义安装目录等信息，例如我们选择安装目录为 C:\\Program Files (x86)\\Java\\jdk1.8.0_121。安装完成后，接下来进行环境的配置右击”我的电脑”，点击”属性”，选择”高级系统设置”选择”高级”选项卡，点击”环境变量”在”系统变量”中设置3项属性，JAVA_HOME,PATH,CLASSPATH(大小写无所谓),若已存在则点击”编辑”，不存在则点击”新建”。变量设置参数如下： 变量名：JAVA_HOME 变量值：C:\\Program Files (x86)\\Java\\jdk1.8.0_91 // 要根据自己的实际路径配置 变量名：CLASSPATH 变量值：.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar; //记得前面有个”.” 变量名：Path 变量值：%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin; 注解：path：系统创建好的，存储的是 .exe 可执行文件程序的目录，针对 JDK 可配置其 bin 目录，目录下的 javac、java、javadoc 命令就可以随时使用了。classPath：自己动手创建的，存储的是 .class 字节码文件的目录。.;就是class字节码文件的所在目录注意: . 号代表的是当前目录 测试JDK是否安装成功 “开始”-&gt;”运行”（或者win + R键），键入”cmd”； 键入命令: java -version、java、javac 几个命令，出现以下信息，说明环境变量配置成功； 3.第一个Java程序HelloWorld 12345678public class HelloWorld &#123; /* 第一个Java程序 * 它将打印字符串 Hello World */ public static void main(String []args) &#123; System.out.println(&quot;Hello World&quot;); // 打印 Hello World &#125;&#125; 在桌面上新建一个文本文档，将以上代码写到文本文档中（注意：1、大小写区别；2、标点符号均为英文符号）将图片另存为名为HelloWorld.java的文件 保存成功以后我们便可以来编译运行这个java文件了 这时候，我们的第一个Java程序便完成了。","tags":[]},{"title":"欢迎使用马克飞象","date":"2017-07-31T08:06:50.284Z","path":"2017/07/31/欢迎使用马克飞象/","text":"欢迎使用马克飞象马克飞象是一款专为印象笔记（Evernote）打造的Markdown编辑器，通过精心的设计与技术实现，配合印象笔记强大的存储和同步功能，带来前所未有的书写体验。特点概述： 功能丰富 ：支持高亮代码块、LaTeX 公式、流程图本地图片以及附件上传，甚至截图粘贴，工作学习好帮手； 得心应手 ：简洁高效的编辑器，提供[桌面客户端][1]以及[离线Chrome App][2]，支持移动端 Web； 深度整合 ：支持选择笔记本和添加标签，支持从印象笔记跳转编辑，轻松管理。 [TOC] Markdown简介 Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，然后转换成格式丰富的HTML页面。 —— 维基百科 正如您在阅读的这份文档，它使用简单的符号标识不同的标题，将某些文字标记为粗体或者斜体，创建一个链接或一个脚注[^demo]。下面列举了几个高级功能，更多语法请按Ctrl + /查看帮助。 代码块12345678910@requires_authorizationdef somefunc(param1='', param2=0): '''A docstring''' if param1 &gt; param2: # interesting print 'Greater' return (param2 - param1 + 1) or Noneclass SomeClass: pass&gt;&gt;&gt; message = '''interpreter... prompt''' LaTeX 公式可以创建行内公式，例如 $\\Gamma(n) = (n-1)!\\quad\\forall n\\in\\mathbb N$。或者块级公式： $$ x = \\dfrac{-b \\pm \\sqrt{b^2 - 4ac}}{2a} $$ 表格 Item Value Qty Computer 1600 USD 5 Phone 12 USD 12 Pipe 1 USD 234 流程图12345678st=&gt;start: Starte=&gt;endop=&gt;operation: My Operationcond=&gt;condition: Yes or No?st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op 以及时序图: 123Alice-&gt;Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob--&gt;Alice: I am good thanks! 提示：想了解更多，请查看流程图[语法][3]以及时序图[语法][4]。 复选框使用 - [ ] 和 - [x] 语法可以创建复选框，实现 todo-list 等功能。例如： 已完成事项 待办事项1 待办事项2 注意：目前支持尚不完全，在印象笔记中勾选复选框是无效、不能同步的，所以必须在马克飞象中修改 Markdown 原文才可生效。下个版本将会全面支持。","tags":[]}]